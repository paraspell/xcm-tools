import acalaPng from '../../logos/acala1.png';
import ajunaPng from '../../logos/ajuna.png';
import assetHubPng from '../../logos/assetHub1.png';
import astarPng from '../../logos/astar1.png';
import aventusPng from '../../logos/aventus.png';
import bifrostPng from '../../logos/bifrost1.png';
import bitgreenPng from '../../logos/bitgreen.png';
import centrifugePng from '../../logos/centrifuge.png';
import collectivesPng from '../../logos/collectives.png';
import composableFinancePng from '../../logos/composableFinance1.png';
import continuumPng from '../../logos/continuum.png';
import crabPng from '../../logos/crab.png';
import crustPng from '../../logos/crust1.png';
import curioPng from '../../logos/curio.png';
import darwiniaPng from '../../logos/darwinia1.png';
import frequencyPng from '../../logos/frequency.png';
import hashedPng from '../../logos/hashed.png';
import hydrationPng from '../../logos/hydration1.png';
import hyperbridgePng from '../../logos/hyperbridge.png';
import interlayPng from '../../logos/interlay.png';
import ipciPng from '../../logos/ipci.png';
import krestPng from '../../logos/krest.png';
import laosPng from '../../logos/laos.png';
import litentryPng from '../../logos/litentry1.png';
import logionPng from '../../logos/logion.png';
import mantaPng from '../../logos/manta1.png';
import moonbeamPng from '../../logos/moonbeam1.png';
import mythosPng from '../../logos/mythos.png';
import neuroWebPng from '../../logos/neuroWeb1.png';
import nodlePng from '../../logos/nodle1.png';
import pendulumPng from '../../logos/pendulum.png';
import phalaPng from '../../logos/phala1.png';
import pioneerPng from '../../logos/pioneer.png';
import polimecPng from '../../logos/polimec.png';
import polkadexPng from '../../logos/polkadex1.png';
import soraPng from '../../logos/sora.png';
import subsocialPng from '../../logos/subsocial1.png';
import t3rnPng from '../../logos/t3rn.png';
import uniquePng from '../../logos/unique.png';
import zeitgeistPng from '../../logos/zeitgeist.png';
import type { Ecosystem } from '../../types/types';
import { getParachainLogo } from '../../utils/utils';

export const getChainLogo = (chain: string, ecosystem: Ecosystem) => {
  if (chain === 'Collectives') return collectivesPng;
  if (chain === 'Interlay') return interlayPng;
  if (chain === 'Centrifuge') return centrifugePng;
  if (chain === 'Zeitgeist') return zeitgeistPng;
  if (chain === 'Bitgreen') return bitgreenPng;
  if (chain === 'Unique Network') return uniquePng;
  if (chain === 'Acala') return acalaPng;
  if (chain === 'Pendulum') return pendulumPng;
  if (chain === 'Manta') return mantaPng;
  if (chain === 'Moonbeam') return moonbeamPng;
  if (chain === 'Subsocial') return subsocialPng;
  if (chain === 'Bifrost') return bifrostPng;
  if (chain === 'Hydration') return hydrationPng;
  if (chain === 'Polkadex') return polkadexPng;
  if (chain === 'Litentry') return litentryPng;
  if (chain === 'AssetHub') return assetHubPng;
  if (chain === 'Astar') return astarPng;
  if (chain === 'NeuroWeb') return neuroWebPng;
  if (chain === 'Phala Network') return phalaPng;
  if (chain === 'Crust') return crustPng;
  if (chain === 'Composable Finance') return composableFinancePng;
  if (chain === 'Nodle') return nodlePng;
  if (chain === 'Darwinia') return darwiniaPng;
  if (chain === 'Continuum') return continuumPng;
  if (chain === 'Aventus') return aventusPng;
  if (chain === 'Ajuna Network') return ajunaPng;
  if (chain === 'Frequency') return frequencyPng;
  if (chain === 'Hyperbridge (Nexus)') return hyperbridgePng;
  if (chain === 'Hashed Network') return hashedPng;
  if (chain === 'Laos') return laosPng;
  if (chain === 'Mythos') return mythosPng;
  if (chain === 'Polimec') return polimecPng;
  if (chain === 't3rn') return t3rnPng;
  if (chain === 'SORA') return soraPng;
  if (chain === 'Logion') return logionPng;
  if (chain === 'Curio') return curioPng;
  if (chain === 'Krest') return krestPng;
  if (chain === 'DAO IPCI') return ipciPng;
  if (chain === 'Crab') return crabPng;
  if (chain === 'Pioneer') return pioneerPng;
  return getParachainLogo(chain, ecosystem);
};

export const getLogoScaleFactor = (chain: string) => {
  if (chain === 'Bitgreen') return 2.5;
  if (chain === 'Unique Network') return 2.5;
  if (chain === 'Moonbeam') return 2.5;
  if (chain === 'Acala') return 2.5;
  if (chain === 'Subsocial') return 2;
  if (chain === 'Bifrost') return 2;
  if (chain === 'Hydration') return 1.75;
  if (chain === 'Polkadex') return 1.75;
  if (chain === 'Litentry') return 1.75;
  if (chain === 'AssetHub') return 1.75;
  if (chain === 'Astar') return 1.75;
  if (chain === 'NeuroWeb') return 1.75;
  if (chain === 'Phala') return 1.75;
  if (chain === 'Crust') return 1.75;
  if (chain === 'Composable Finance') return 1.75;
  if (chain === 'Nodle') return 1.5;
  if (chain === 'Manta') return 2;
  if (chain === 'Continuum') return 1.75;
  if (chain === 'Aventus') return 1.75;
  if (chain === 'Ajuna Network') return 1.75;
  if (chain === 'Frequency') return 1.75;
  if (chain === 'Hyperbridge (Nexus)') return 1.4;
  if (chain === 'Hashed Network') return 2;
  if (chain === 'Laos') return 2;
  if (chain === 'Mythos') return 1.5;
  if (chain === 'Polimec') return 1.5;
  if (chain === 't3rn') return 2;
  if (chain === 'SORA') return 2;
  if (chain === 'Logion') return 2;
  if (chain === 'Curio') return 2;
  if (chain === 'Krest') return 2;
  if (chain === 'DAO IPCI') return 2;
  if (chain === 'Crab') return 2;
  if (chain === 'Pioneer') return 2;
  return 3;
};
